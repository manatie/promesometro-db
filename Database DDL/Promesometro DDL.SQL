/*
Created: 6/9/2019
Modified: 6/12/2019
Project: PROMESOMETRO
Model: PROMESOMETRO
Company: Lagartos INC
Author: Boris
Version: 1
Database: MySQL 5.5
*/

-- Create tables section -------------------------------------------------

-- Table PARTY

CREATE TABLE PARTY
(
  PARTY_ID Smallint NOT NULL AUTO_INCREMENT,
  PARTY Varchar(250) NOT NULL,
  SECRETARY Varchar(250),
  FOUNDED Date,
  FOUNDER Varchar(250),
  SITE_URL Varchar(250),
  LOGO_URL Varchar(250),
  DESCRIPTION Varchar(500),
 PRIMARY KEY (PARTY_ID)
)
  AUTO_INCREMENT = 1
;

ALTER TABLE PARTY ADD UNIQUE PARTY (PARTY)
;

-- Table USER

CREATE TABLE USER
(
  USER_ID Smallint NOT NULL AUTO_INCREMENT,
  USER Varchar(20) NOT NULL,
  BIRTH_DATE Date,
  MAIL Varchar(100),
  GENDER Char(1),
  ROLE_ID Smallint NOT NULL,
  PARTY_ID Smallint,
  STATE Varchar(50),
 PRIMARY KEY (USER_ID)
)
  AUTO_INCREMENT = 1
;

ALTER TABLE USER ADD UNIQUE USUARIO (USER)
;

-- Table ROLE

CREATE TABLE ROLE
(
  ROLE_ID Smallint NOT NULL AUTO_INCREMENT,
  ROLE Varchar(10) NOT NULL,
  DESCRIPTION Varchar(50),
 PRIMARY KEY (ROLE_ID)
)
;

ALTER TABLE ROLE ADD UNIQUE ROL (ROLE)
;

-- Table PROMISE_MASTER

CREATE TABLE PROMISE_MASTER
(
  PROMISE_ID Smallint NOT NULL AUTO_INCREMENT,
  PROMISE Varchar(500) NOT NULL,
  CANDIDATE_ID Smallint NOT NULL,
  DATE Datetime NOT NULL,
 PRIMARY KEY (PROMISE_ID)
)
;

ALTER TABLE PROMISE_MASTER ADD UNIQUE PROMESA (PROMISE)
;

-- Table CANDIDATE

CREATE TABLE CANDIDATE
(
  NAME Varchar(250) NOT NULL,
  CANDIDATE_ID Smallint NOT NULL AUTO_INCREMENT,
  PARTY_ID Smallint NOT NULL,
  POSITION_ID Smallint,
  DESCRIPTION Varchar(500),
  SITE_URL Varchar(250),
  TWITTER Varchar(100),
  FACEBOOK Varchar(100),
  STALL Smallint,
  PIC_URL Varchar(250),
 PRIMARY KEY (CANDIDATE_ID)
)
;

ALTER TABLE CANDIDATE ADD UNIQUE NOMBRE (NAME)
;

-- Table PROMISE_DETAIL

CREATE TABLE PROMISE_DETAIL
(
  USER_ID Smallint NOT NULL,
  PROMISE_ID Smallint NOT NULL,
  LATITUDE Float,
  LONGITUDE Float,
  DATE Datetime NOT NULL,
  DEVICE Varchar(20)
)
;

ALTER TABLE PROMISE_DETAIL ADD PRIMARY KEY (USER_ID,PROMISE_ID)
;

-- Table POSITION

CREATE TABLE POSITION
(
  POSITION_ID Smallint NOT NULL AUTO_INCREMENT,
  POSITION Varchar(250) NOT NULL,
 PRIMARY KEY (POSITION_ID)
)
;

ALTER TABLE POSITION ADD UNIQUE POSITION (POSITION)
;

-- Table REACTION

CREATE TABLE REACTION
(
  PROMISE_ID Smallint NOT NULL,
  USER_ID Smallint NOT NULL,
  REACTION_TYPE_ID Smallint NOT NULL,
  DATE Datetime NOT NULL,
  LATITUDE Float,
  LONGITUDE Float
)
;

ALTER TABLE REACTION ADD PRIMARY KEY (PROMISE_ID,USER_ID,REACTION_TYPE_ID)
;

-- Table REACTION_TYPE

CREATE TABLE REACTION_TYPE
(
  REACTION_TYPE_ID Smallint NOT NULL,
  REACTION_TYPE Varchar(100) NOT NULL,
  FEEL_POINT Smallint
)
;

ALTER TABLE REACTION_TYPE ADD PRIMARY KEY (REACTION_TYPE_ID)
;

ALTER TABLE REACTION_TYPE ADD UNIQUE REACTION_TYPE (REACTION_TYPE)
;

-- Table COMMENT

CREATE TABLE COMMENT
(
  PROMISE_ID Smallint NOT NULL,
  USER_ID Smallint NOT NULL,
  DATE Datetime NOT NULL,
  LATITUDE Float,
  LONGITUDE Float
)
;

-- Table PROMISE_CONTENT

CREATE TABLE PROMISE_CONTENT
(
  CONTENT_ID Smallint NOT NULL AUTO_INCREMENT,
  USER_ID Smallint,
  PROMISE_ID Smallint,
  CONTENT_TYPE_ID Smallint,
  URL Varchar(250) NOT NULL,
 PRIMARY KEY (CONTENT_ID)
)
;

-- Table CONTENT_TYPE

CREATE TABLE CONTENT_TYPE
(
  CONTENT_TYPE_ID Smallint NOT NULL AUTO_INCREMENT,
  TYPE Varchar(100) NOT NULL,
 PRIMARY KEY (CONTENT_TYPE_ID)
)
;

ALTER TABLE CONTENT_TYPE ADD UNIQUE TYPE (TYPE)
;

-- Create relationships section ------------------------------------------------- 

ALTER TABLE USER ADD CONSTRAINT Relationship5 FOREIGN KEY (ROLE_ID) REFERENCES ROLE (ROLE_ID) ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE USER ADD CONSTRAINT Relationship9 FOREIGN KEY (PARTY_ID) REFERENCES PARTY (PARTY_ID) ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE PROMISE_MASTER ADD CONSTRAINT Relationship15 FOREIGN KEY (CANDIDATE_ID) REFERENCES CANDIDATE (CANDIDATE_ID) ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE PROMISE_DETAIL ADD CONSTRAINT Relationship26 FOREIGN KEY (USER_ID) REFERENCES USER (USER_ID) ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE CANDIDATE ADD CONSTRAINT Relationship31 FOREIGN KEY (PARTY_ID) REFERENCES PARTY (PARTY_ID) ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE REACTION ADD CONSTRAINT Relationship34 FOREIGN KEY (PROMISE_ID) REFERENCES PROMISE_MASTER (PROMISE_ID) ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE REACTION ADD CONSTRAINT Relationship35 FOREIGN KEY (USER_ID) REFERENCES USER (USER_ID) ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE REACTION ADD CONSTRAINT Relationship36 FOREIGN KEY (REACTION_TYPE_ID) REFERENCES REACTION_TYPE (REACTION_TYPE_ID) ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE COMMENT ADD CONSTRAINT Relationship37 FOREIGN KEY (PROMISE_ID) REFERENCES PROMISE_MASTER (PROMISE_ID) ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE COMMENT ADD CONSTRAINT Relationship38 FOREIGN KEY (USER_ID) REFERENCES USER (USER_ID) ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE CANDIDATE ADD CONSTRAINT Relationship39 FOREIGN KEY (POSITION_ID) REFERENCES POSITION (POSITION_ID) ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE PROMISE_DETAIL ADD CONSTRAINT Relationship40 FOREIGN KEY (PROMISE_ID) REFERENCES PROMISE_MASTER (PROMISE_ID) ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE PROMISE_CONTENT ADD CONSTRAINT Relationship41 FOREIGN KEY (USER_ID, PROMISE_ID) REFERENCES PROMISE_DETAIL (USER_ID, PROMISE_ID) ON DELETE NO ACTION ON UPDATE NO ACTION
;

ALTER TABLE PROMISE_CONTENT ADD CONSTRAINT Relationship42 FOREIGN KEY (CONTENT_TYPE_ID) REFERENCES CONTENT_TYPE (CONTENT_TYPE_ID) ON DELETE NO ACTION ON UPDATE NO ACTION
;


